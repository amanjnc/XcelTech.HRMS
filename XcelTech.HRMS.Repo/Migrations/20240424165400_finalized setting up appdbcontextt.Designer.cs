// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using XcelTech.HRMS.Repo;

#nullable disable

namespace XcelTech.HRMS.Repo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240424165400_finalized setting up appdbcontextt")]
    partial class finalizedsettingupappdbcontextt
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("XcelTech.HRMS.Model.Model.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("DepartmentId"));

                    b.Property<string>("DepartmentDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("DepartmentId");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("XcelTech.HRMS.Model.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("EmployeeId"));

                    b.Property<int>("DepartmentID")
                        .HasColumnType("integer");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("integer");

                    b.Property<string>("EmployeeAddress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmployeeAge")
                        .HasColumnType("integer");

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("EmployeeHiredDate")
                        .HasColumnType("date");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EmployeePhone")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("EmployyDOB")
                        .HasColumnType("date");

                    b.Property<int>("PayrollId")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentID");

                    b.HasIndex("PayrollId");

                    b.HasIndex("ProjectId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("XcelTech.HRMS.Model.Model.Payroll", b =>
                {
                    b.Property<int>("PayrollId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PayrollId"));

                    b.Property<float>("DeductionsAndBonus")
                        .HasColumnType("real");

                    b.Property<float>("NetPay")
                        .HasColumnType("real");

                    b.Property<DateOnly>("PayrollEndDate")
                        .HasColumnType("date");

                    b.Property<DateOnly>("PayrollStartDate")
                        .HasColumnType("date");

                    b.Property<string>("payrollpay")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PayrollId");

                    b.ToTable("Payroll");
                });

            modelBuilder.Entity("XcelTech.HRMS.Model.Model.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProjectId"));

                    b.Property<string>("ProjectDescription")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("ProjectEndDate")
                        .HasColumnType("date");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateOnly>("ProjectStartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ProjectId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("XcelTech.HRMS.Model.Model.Employee", b =>
                {
                    b.HasOne("XcelTech.HRMS.Model.Model.Department", "department")
                        .WithMany()
                        .HasForeignKey("DepartmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XcelTech.HRMS.Model.Model.Payroll", "payroll")
                        .WithMany()
                        .HasForeignKey("PayrollId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("XcelTech.HRMS.Model.Model.Project", "project")
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("department");

                    b.Navigation("payroll");

                    b.Navigation("project");
                });
#pragma warning restore 612, 618
        }
    }
}
